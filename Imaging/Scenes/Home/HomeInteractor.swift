//
//  HomeInteractor.swift
//  Imaging
//
//  Created by Raymond Law on 7/7/18.
//  Copyright (c) 2018 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
  func setIcon(request: Home.SetIcon.Request)
  func fetchEntries(request: Home.FetchEntries.Request)
}

protocol HomeDataStore
{
}

class HomeInteractor: NSObject, HomeBusinessLogic, HomeDataStore, UINavigationControllerDelegate, UIImagePickerControllerDelegate
{
  var presenter: HomePresentationLogic?
  var worker = HomeWorker()
  
  // MARK: Fetch entries
  
  private var entries = [Entry]()
  
  func fetchEntries(request: Home.FetchEntries.Request)
  {
    worker.fetchEntries { (entries) in
      self.entries = entries
      let response = Home.FetchEntries.Response(entries: entries)
      presenter?.presentFetchEntries(response: response)
    }
  }
  
  // MARK: Set icon
  
  private var indexPath: IndexPath?
  
  func setIcon(request: Home.SetIcon.Request)
  {
    indexPath = request.indexPath
    let picker = UIImagePickerController()
    picker.sourceType = .photoLibrary
    picker.allowsEditing = true
    picker.delegate = self
    request.viewController.present(picker, animated: true)
  }
  
  func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any])
  {
    picker.dismiss(animated: true)
    guard let image = info[UIImagePickerControllerEditedImage] as? UIImage else { return }
    
    var entry = entries[indexPath!.row]
    entry.icon = image
    
    // TODO: Persist the image
    
    let response = Home.SetIcon.Response(entry: entry, indexPath: indexPath!)
    presenter?.presentSetIcon(response: response)
  }
}
